{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","this","props","name","today","className","toUTCString","slice","React","Component","getRandomName","value","Date","now","toString","App","state","hasClock","clockName","timerId","clockNameTimerId","handleClick","event","preventDefault","newClockName","setState","startTimers","updateTimeImmediately","handleContextMenu","stopTimers","document","addEventListener","removeEventListener","window","setInterval","newToday","infoMessage","console","info","debug","clearInterval","ReactDOM","render","getElementById"],"mappings":"sNAQaA,EAAb,4JACE,WACE,MAAwBC,KAAKC,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAChC,YACD,sBAAME,UAAU,cAAhB,SACGD,EAAME,cAAcC,OAAO,IAAK,YAT3C,GAA2BC,IAAMC,WCEjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAGX,IAAMI,EAAb,4MACEC,MAAkB,CAChBZ,MAAO,IAAIQ,KACXK,UAAU,EACVC,UAAW,WAJf,EAOEC,QAAU,EAPZ,EASEC,iBAAmB,EATrB,EAsBEC,YAAc,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAed,IAErB,EAAKe,SAAS,CAAER,UAAU,EAAMC,UAAWM,IAC3C,EAAKE,cACL,EAAKC,yBA5BT,EA+BEC,kBAAoB,SAACN,GACnBA,EAAMC,iBACN,EAAKE,SAAS,CAAER,UAAU,IAC1B,EAAKY,cAlCT,uDAWE,WACE5B,KAAKyB,cAELI,SAASC,iBAAiB,cAAe9B,KAAK2B,mBAC9CE,SAASC,iBAAiB,QAAS9B,KAAKoB,eAf5C,kCAkBE,WACES,SAASE,oBAAoB,cAAe/B,KAAK2B,qBAnBrD,yBAqCE,WAAe,IAAD,OACZ3B,KAAKkB,QAAUc,OAAOC,aAAY,WAChC,IAAMC,EAAW,IAAIvB,KACfwB,EAAcD,EAAS7B,cAAcC,OAAO,IAAK,GAEvD,EAAKkB,UAAS,iBAAO,CAAErB,MAAO+B,MAG9BE,QAAQC,KAAKF,KACZ,KAEHnC,KAAKmB,iBAAmBa,OAAOC,aAAY,WACzC,IAAMV,EAAed,IAEjB,EAAKM,MAAME,YAAcM,IAE3Ba,QAAQE,MAAR,uBACkB,EAAKvB,MAAME,UAD7B,eAC6CM,IAG7C,EAAKC,SAAS,CAAEP,UAAWM,OAE5B,QA3DP,wBA8DE,WACES,OAAOO,cAAcvC,KAAKkB,SAC1Bc,OAAOO,cAAcvC,KAAKmB,oBAhE9B,mCAmEE,WACEnB,KAAKwB,UAAS,WAGZ,MAAO,CAAErB,MAFQ,IAAIQ,WArE3B,oBA2EE,WACE,MAAuCX,KAAKe,MAApCZ,EAAR,EAAQA,MAAOa,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,UAEzB,OACE,sBAAKb,UAAU,MAAf,UACE,6CAECY,GAAY,cAAC,EAAD,CAAOd,KAAMe,EAAWd,MAAOA,WAlFpD,GAAyBI,IAAMC,WCb/BgC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.d6cd0cee.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  name: string;\n  today: Date;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class Clock extends React.Component<ClockProps> {\n  render() {\n    const { name, today } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\ninterface AppState {\n  today: Date;\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    today: new Date(),\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  clockNameTimerId = 0;\n\n  componentDidMount() {\n    this.startTimers();\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    const newClockName = getRandomName();\n\n    this.setState({ hasClock: true, clockName: newClockName });\n    this.startTimers();\n    this.updateTimeImmediately();\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n    this.stopTimers();\n  };\n\n  startTimers() {\n    this.timerId = window.setInterval(() => {\n      const newToday = new Date();\n      const infoMessage = newToday.toUTCString().slice(-12, -4);\n\n      this.setState(() => ({ today: newToday }));\n\n      // eslint-disable-next-line no-console\n      console.info(infoMessage);\n    }, 1000);\n\n    this.clockNameTimerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      if (this.state.clockName !== newClockName) {\n        // eslint-disable-next-line no-console\n        console.debug(\n          `Renamed from ${this.state.clockName} to ${newClockName}`,\n        );\n\n        this.setState({ clockName: newClockName });\n      }\n    }, 3300);\n  }\n\n  stopTimers() {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.clockNameTimerId);\n  }\n\n  updateTimeImmediately() {\n    this.setState(() => {\n      const newToday = new Date();\n\n      return { today: newToday };\n    });\n  }\n\n  render() {\n    const { today, hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} today={today} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}